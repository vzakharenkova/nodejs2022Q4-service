version: '3.4'

services:
  homelibrary:
    image: homelibrary
    build:
      dockerfile: Dockerfile
      context: .
    volumes:
      - ./src:/usr/app/src
    # environment:
    #   NODE_ENV: production
    #   PORT: ${PORT}
    #   DATABASE_URL: ${DATABASE_URL}
    env_file:
      - .env
    networks:
      - homelibrary-net
    depends_on:
      - postgres
    restart: always
    ports:
      - ${PORT}:${PORT}
  postgres:
    image: postgres
    build:
      context: .
      dockerfile: ./src/database/Dockerfile
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres-initdb.sh:/docker-entrypoint-initdb.d/init.sh
    networks:
      - homelibrary-net
    restart: always
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
volumes:
  db-data:
networks:
  homelibrary-net:
    driver: bridge
